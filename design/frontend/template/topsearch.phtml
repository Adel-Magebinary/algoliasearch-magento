<?php
    $catalogSearchHelper = $this->helper('catalogsearch'); /** @var $catalogSearchHelper Mage_CatalogSearch_Helper_Data */
    $algoliaSearchHelper = $this->helper('algoliasearch'); /** @var $algoliaSearchHelper Algolia_Algoliasearch_Helper_Data */
?>


<form id="search_mini_form" action="<?php echo $catalogSearchHelper->getResultUrl() ?>" method="get">
    <div class="form-search">
        <label for="search"><?php echo $this->__('Search:') ?></label>
        <input id="search" type="text" name="<?php echo $catalogSearchHelper->getQueryParamName() ?>" value="<?php echo $catalogSearchHelper->getEscapedQueryText() ?>" class="input-text" autocomplete="off" spellcheck="false" autocorrect="off" autocapitalize="off" />
        <button type="submit" title="<?php echo $this->__('Search') ?>" class="button"><span><span><?php echo $this->__('Search') ?></span></span></button>
        <div id="search_autocomplete" class="algoliasearch-autocomplete">
            <div id="search_autocomplete_categories"></div>
            <div id="search_autocomplete_products"></div>
        </div>
        <script type="text/javascript">
        //<![CDATA[
            var searchForm = new Varien.searchForm('search_mini_form', 'search', '<?php echo $this->__('Search entire store here...') ?>');
            //searchForm.initAutocomplete('<?php echo $catalogSearchHelper->getSuggestUrl() ?>', 'search_autocomplete');
            var $search = $('search');
            var algolia = new AlgoliaSearch('<?php echo $algoliaSearchHelper->getApplicationID(); ?>', '<?php echo $algoliaSearchHelper->getSearchOnlyAPIKey(); ?>');
            var searchQuery = '';
            var searchTimeoutId = null;

            $search.observe('keyup', algoliaSearch).observe('focus', algoliaSearch).observe('blur', function() {
                setTimeout(function() {
                    $('search_autocomplete_categories').update('');
                    $('search_autocomplete_products').update('');
                }, 100);
            });
            function algoliaSearch(event) {
                searchQuery = $search.getValue();
                if (searchTimeoutId) {
                    clearTimeout(searchTimeoutId);
                }
                searchTimeoutId = setTimeout(performSearch, <?php echo $algoliaSearchHelper->getSearchDelay(); ?>);
            }
            function performSearch() {
                if (searchQuery.length >= <?php echo $algoliaSearchHelper->getMinimalQueryLength() ?> && searchQuery.lastIndexOf(' ') != searchQuery.length - 1) {
                    algolia.startQueriesBatch();
                    var queryArguments = {hitsPerPage: <?php echo $algoliaSearchHelper->getNbSuggestions(); ?>, tagFilters: '(product,category)' };
                    queryArguments.attributesToRetrieve = <?php echo json_encode($algoliaSearchHelper->getAttributesToRetrieve()) ?>;
                    algolia.addQueryInBatch('<?php echo $algoliaSearchHelper->getIndexName() ?>', searchQuery, queryArguments);
                    algolia.sendQueriesBatch(algoliaSearchCallback);
                }
            }

            function algoliaSearchCallback(success, content) {
                if (!success) {
                    console.log(content);
                    return;
                }
                if (!content.results || content.results.length != 1 || $search.getValue() != content.results[0].query || !content.results[0].hits) {
                    return;
                }

                var hits = content.results[0].hits,
                    products = [],
                    categories = [],
                    html, i;
                hits.each(function(hit) {
                    if (typeof(hit) === 'object' && typeof(hit._tags) === 'object') {
                        if (hit._tags.indexOf('product') > -1) {
                            products.push(hit);
                        } else if (hit._tags.indexOf('category') > -1) {
                            categories.push(hit);
                        }
                    }
                });

                html = '';
                for (i = 0; i < categories.length; ++i) {
                    hit = categories[i];
                    if (html === '') {
                        html += '<div class="algoliasearch-autocomplete-title"><?php echo $this->__('Categories') ?></div>';
                    }
                    html += '<a class="algoliasearch-autocomplete-hit" href="' + hit.url + '">' +
                        (hit.image_url ? '<div class="thumb"><img src="' + hit.image_url + '" /></div>' : '') +
                        '<div class="info">' +
                            hit._highlightResult.name.value +
                            ' <small>(' + hit.product_count + ')</small>' +
                        '</div>' +
                        '<div class="clearfix"></div>' +
                        '</a>';
                }
                $('search_autocomplete_categories').update(html);

                html = '';
                for (i = 0; i < products.length; ++i) {
                    var hit = products[i];
                    if (html === '') {
                        html += '<div class="algoliasearch-autocomplete-title"><?php echo $this->__('Products') ?></div>';
                    }
                    html += '<a class="algoliasearch-autocomplete-hit" href="' + hit.url + '">' +
                        (hit.thumbnail_url ? '<div class="thumb"><img src="' + hit.thumbnail_url + '" /></div>' : '') +
                        '<div class="info">' +
                            hit._highlightResult.name.value +
                            (hit.categories && hit.categories.length > 0 ? '<div class="algoliasearch-autocomplete-category">in ' + hit.categories.join(', ') + '</div>' : '') +
                        '</div>' +
                        '<div class="clearfix"></div>' +
                        '</a>';
                }
                $('search_autocomplete_products').update(html);
            }
        //]]>
        </script>
    </div>
</form>
